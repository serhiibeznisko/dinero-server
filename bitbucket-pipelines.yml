image: docker:19.03.8
definitions:
  services:
    docker:
      memory: 2048
pipelines:
  default:
    - step:
        caches:
          - docker
        script:
          - apk add py-pip && pip install --no-cache-dir docker-compose==1.23.2
          - docker-compose -f docker-compose.yml build
          - docker-compose -f docker-compose.yml up -d
          - docker exec -t dinero-django /bin/sh -c "cd src && PYTHONDONTWRITEBYTECODE=1 python -m pytest --disable-warnings"
        services:
          - docker

  branches:
    staging:
      - step:
          name: Deploy to staging
          deployment: staging
          caches:
            - docker
          script:
            - apk add curl
            - docker build --build-arg APP_ENV=PRODUCTION -t $APP_NAME .
            - docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
            - docker tag $APP_NAME registry.heroku.com/$APP_NAME/web
            - docker push registry.heroku.com/$APP_NAME/web
            - export WEB_DOCKER_IMAGE_ID=$(docker inspect registry.heroku.com/$APP_NAME/web --format={{.Id}})
            - chmod +x infrastructure/heroku/deploy.sh && ./infrastructure/heroku/deploy.sh
          services:
            - docker

    master:
      - step:
          name: Deploy to production
          deployment: production
          script:
            - apk add curl
            - docker build --build-arg APP_ENV=PRODUCTION -t $APP_NAME .
            - docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
            - docker tag $APP_NAME registry.heroku.com/$APP_NAME/web
            - docker push registry.heroku.com/$APP_NAME/web
            - export WEB_DOCKER_IMAGE_ID=$(docker inspect registry.heroku.com/$APP_NAME/web --format={{.Id}})
            - chmod +x infrastructure/heroku/deploy.sh && ./infrastructure/heroku/deploy.sh
          services:
            - docker
          caches:
            - docker
